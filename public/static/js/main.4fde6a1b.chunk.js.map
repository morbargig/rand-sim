{"version":3,"sources":["components/Color.js","components/Palette.js","components/LikesSection.js","components/BigPhoto.js","components/PhotoSection.js","components/SearchSection.js","components/SmallPhoto.js","components/LoadMoreButton.js","components/PhotoGallery.js","components/Home.js","App.js","serviceWorker.js","index.js"],"names":["Color","props","r","rgb","g","b","react_default","a","createElement","className","style","backgroundColor","concat","Palette","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","populatePalette","_i","_paletteKeys","keys","palette","length","key","state","push","id","map","p","i","components_Color","Component","LikesSection","image","likes","tags","camera","make","BigPhoto","splice","alt","src","urls","regular","components_Palette","components_LikesSection","PhotoSection","componentDidMount","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","axios","get","match","params","imageID","sent","setState","data","stop","components_BigPhoto","SearchSection","handleSearch","input","handleInput","e","target","value","handleKeyDown","type","placeholder","onChange","onKeyDown","onClick","SmallPhoto","react_router_dom","to","url","LoadMoreButton","page","PhotoGallery","childElements","images","components_SmallPhoto","lib_default","options","columnWidth","itemSelector","onImagesLoaded","handleImagesLoaded","components_LoadMoreButton","Home","components_SearchSection","components_PhotoGallery","App","addPage","_ref","newSearch","t0","abrupt","_x","apply","arguments","getPhotos","_callee2","_context2","updateInput","_ref3","_callee3","_context3","_x2","combineImages","newImages","toConsumableArray","_ref4","_callee4","allImages","_context4","_x3","_x4","_this2","react_router","exact","path","render","components_Home","_ref5","components_PhotoSection","Boolean","window","location","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4fde6a1b.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Color(props) {\r\n  const r = props.rgb[0]\r\n  const g = props.rgb[1]\r\n  const b = props.rgb[2]\r\n\r\n  return (\r\n    <div className=\"color-scheme\" style={{ backgroundColor: `rgb(${r}, ${g}, ${b})` }}></div>\r\n  )\r\n}\r\n\r\nexport default Color","import React, { Component } from 'react';\r\nimport Color from './Color';\r\n\r\nclass Palette extends Component {\r\n\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      palette: []\r\n    }\r\n  }\r\n\r\n  populatePalette = () => {\r\n    const paletteKeys = Object.keys(this.props.palette)\r\n\r\n    for (let key of paletteKeys) {\r\n      this.state.palette.push(this.props.palette[key])\r\n    }\r\n  }\r\n\r\n  render() {\r\n    this.populatePalette()\r\n\r\n    return (\r\n      <div id=\"color-palette\">\r\n        {this.state.palette.map((p, i) => <Color key={i} rgb={p.rgb} />)}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Palette","import React from 'react'\r\n\r\nfunction LikesSection(props) {\r\n  const image = props.image\r\n\r\n  return (\r\n    <div id=\"likes-section\">\r\n      <div id=\"likes\"><i className=\"fas fa-thumbs-up\"></i>{image.likes}</div>\r\n      <div id=\"tags\">\r\n          {image.tags.map((p, i) => <span className=\"tag\" key={i}>{p}</span>)}\r\n      </div>\r\n      <div id=\"camera\"><i className=\"fas fa-camera\"></i>{image.camera.make}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LikesSection","import React from 'react'\r\nimport Palette from './Palette'\r\nimport LikesSection from './LikesSection';\r\n\r\nfunction BigPhoto(props) {\r\n  const image = props.image\r\n  image.tags.splice(3)\r\n\r\n  return (\r\n    <div id=\"single-image\">\r\n      <img alt=\"\" src={image.urls.regular} />\r\n      <Palette palette={image.palette} />\r\n      <LikesSection image={props.image} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BigPhoto","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport BigPhoto from './BigPhoto';\r\n\r\n\r\nclass PhotoSection extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      image: {}\r\n    }\r\n  }\r\n\r\n  componentDidMount = async () => {\r\n    const image = await axios.get(`http://localhost:8989/api/photos/${this.props.match.params.imageID}`)\r\n    this.setState({ image: image.data })\r\n  }\r\n\r\n  render() {\r\n    const image = this.state.image\r\n\r\n    return (\r\n      <div id=\"single-image-container\">\r\n        {image.urls ? <BigPhoto image={image} /> : null}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default PhotoSection\r\n","import React, { Component } from 'react';\r\n\r\nclass SearchSection extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      input: ''\r\n    };\r\n  }\r\n\r\n  handleSearch = () => this.props.handleSearch(this.state.input, true)\r\n\r\n  handleInput = e => this.setState({ input: e.target.value })\r\n\r\n  handleKeyDown = e => { if (e.key === 'Enter') { this.handleSearch() } }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"outer-search\">\r\n        <div id=\"search-container\">\r\n          <input\r\n            type=\"text\"\r\n            id=\"search\"\r\n            placeholder=\"search photos\"\r\n            value={this.state.input}\r\n            onChange={this.handleInput}\r\n            onKeyDown={this.handleKeyDown}\r\n          />\r\n          <div id=\"search-btn\" onClick={this.handleSearch}>\r\n            <i className=\"fas fa-search\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SearchSection;","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction SmallPhoto(props) {\r\n  const image = props.image\r\n\r\n  return (\r\n    <div className=\"image\">\r\n      <div className=\"grid-sizer\"></div>\r\n      <Link className=\"grid-item\" to={`image/${image.id}`}><img alt=\"\" src={image.url} /></Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SmallPhoto","import React, { Component } from 'react';\r\n\r\nclass LoadMoreButton extends Component {\r\n  handleSearch = () => this.props.handleSearch(null, false);\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"btn-container\">\r\n        {this.props.page ? (<div id=\"load-btn\" onClick={this.handleSearch}>LOAD MORE</div>) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoadMoreButton;\r\n","import React, { Component } from 'react';\r\nimport SmallPhoto from './SmallPhoto';\r\nimport Masonry from 'react-masonry-component';\r\nimport LoadMoreButton from './LoadMoreButton';\r\n\r\nclass PhotoGallery extends Component {\r\n  handleSearch = () => this.props.handleSearch(null, false);\r\n\r\n  render() {\r\n    const childElements = this.props.images.map(i => <SmallPhoto key={i.id} image={i} />);\r\n\r\n    const masonryOptions = {\r\n      columnWidth: '.grid-sizer',\r\n      itemSelector: '.grid-item'\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <Masonry options={masonryOptions} onImagesLoaded={this.handleImagesLoaded}>\r\n          {childElements}\r\n        </Masonry>\r\n        <LoadMoreButton page={this.props.page} handleSearch={this.props.handleSearch} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PhotoGallery;\r\n","import React from 'react';\r\nimport SearchSection from './SearchSection';\r\nimport PhotoGallery from './PhotoGallery';\r\n\r\nfunction Home(props) {\r\n  return (\r\n    <div>\r\n      <SearchSection handleSearch={props.handleSearch} />\r\n      {props.images.length ? (<PhotoGallery handleSearch={props.handleSearch} page={props.page} images={props.images} />) : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from 'react'\r\nimport './App.css'\r\nimport axios from 'axios'\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\r\nimport Photo from './components/PhotoSection'\r\nimport Home from './components/Home'\r\n\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      images: [],\r\n      page: 0,\r\n      input: ''\r\n    }\r\n  }\r\n\r\n  addPage = async (newSearch) => await newSearch ? this.setState({ page: 1 }) : this.setState({ page: ++this.state.page })\r\n\r\n  getPhotos = async () => await axios.get(`http://localhost:8989/api/photos/search/${this.state.input}?page=${this.state.page}`)\r\n\r\n  updateInput = async input => { if (input) { await this.setState({ input }) } }\r\n\r\n  combineImages = newImages => [...this.state.images, ...newImages]\r\n\r\n  handleSearch = async (input, newSearch) => {\r\n    await this.addPage(newSearch)\r\n    this.updateInput(input)\r\n    const newImages = await this.getPhotos()\r\n    const allImages = this.combineImages(newImages.data)\r\n    this.setState({ images: allImages })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <Route exact path=\"/\" render={() => <Home images={this.state.images} page={this.state.page} handleSearch={this.handleSearch}/>} />\r\n        <Route path=\"/image/:imageID\" exact render={({ match }) => <Photo match={match} />} />\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}